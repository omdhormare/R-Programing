SET A:
-----------------------------------------------------------------------------------------------
1. Write a R program to display the first 10 Fibonacci numbers
--------------------------------------------------------------------------------------------------
Fibonacci <- numeric(10)
Fibonacci[1] <- Fibonacci[2] <- 1
for (i in 3:10) Fibonacci[i] <- Fibonacci[i - 2] + Fibonacci[i - 1]
print("First 10 Fibonacci numbers:")
print(Fibonacci)

--------------------------------------------------------------------------------------------------
2 . Write a program to calculate sum of digits of a given input number.
--------------------------------------------------------------------------------------------------
n = as.integer(readline("Enter a number:"))
sum = 0
while (n > 0) {
  r = n %% 10
  sum = sum + r
  n = n %/% 10
}
print(paste("Sum of digits is:", sum))
---------------------------------------------------------------------------------------------
3. Write program to check whether a input number is Armstrong number or not.
---------------------------------------------------------------------------------------------
num = as.integer(readline("Enter a number: "))
sum = 0
temp = num
while(temp > 0) {
    digit = temp %% 10
    sum = sum + (digit ^ 3)
    temp = floor(temp/10)
}
if(num == sum) {
    print(paste(num,"is an Armstrong number"))
} else {
    print(paste(num,"is not an Armstrong number"))
}
---------------------------------------------------------------------------------------------
4. Write a program to check whether a input number is perfect number of not..
---------------------------------------------------------------------------------------------
 n <- as.integer(readline(prompt = "Enter a number :"))
    i = 1
    s = 0
    while (i < n) {
      if (n %% i == 0) {
        s = s + i
      }
      i = i + 1
    }
    if (s == n) {
      print(paste("The number is perfect :", n))
    } else{
      print(paste("The number is not perfect :", n))
    }
---------------------------------------------------------------------------------------------
4. Write a R script to display multiplication table of a given input number
---------------------------------------------------------------------------------------------
n=as.integer(readline("Enter A No : "))
for(i in 1:10)
print(n*i)
---------------------------------------------------------------------------------------------

SET B:

1. Write a R program to get all prime numbers up to a given number
---------------------------------------------------------------------------------------------
num     = as.integer(readline(prompt = "Enter a number: "))
isPrime = 0
if (num > 1) {
    isPrime = 1
    for (i in 2: (num - 1)) {
        if ((num %% i) == 0) {
            isPrime = 0
            break
        }
    }
}
if (num == 2) isPrime = 1
if (isPrime == 1) {
    print(paste(num, "is a prime number"))
} else {
    print(paste(num, "is not a prime number"))
}
---------------------------------------------------------------------------------------------
2). Accept the cost price and selling price from the keyboard. Find out if the seller has made 
a profit or loss and display how much profit or loss has been made
---------------------------------------------------------------------------------------------
cost_price <- as.numeric(readline(prompt = "Enter the cost price: "))
selling_price <- as.numeric(readline(prompt = "Enter the selling price: "))
profit_or_loss <- selling_price - cost_price
if (profit_or_loss > 0) {
  cat("The seller has made a profit of ", profit_or_loss, "\n")
} else if (profit_or_loss < 0) {
  cat("Profit", abs(profit_or_loss), "\n")
} else {
  cat(" loss.\n")
}
---------------------------------------------------------------------------------------------
4) Write a program to check whether a input number is palindrome or not.
---------------------------------------------------------------------------------------------
n <- 434
rev <- 0
num <- n
while (n > 0) {
  r <- n %% 10
  rev <- rev * 10 + r
  n <- n %/% 10
}
if (rev == num) {
  cat("Number is a palindrome:", rev, "\n")
} else {
  cat("Number is not a palindrome:", rev, "\n")
}
---------------------------------------------------------------------------------------------
5. Write a program to accept a number and count number of even, odd, zero digits within 
that number.
---------------------------------------------------------------------------------------------
number <- as.numeric(readline("Enter a number: "))
even_count <- 0
odd_count <- 0
zero_count <- 0

while (number > 0) {
  digit <- number %% 10
  if (digit == 0) {
    zero_count <- zero_count + 1
  } else if (digit %% 2 == 0) {
    even_count <- even_count + 1
  } else {
    odd_count <- odd_count + 1
  }
  number <- number %/% 10
}
cat("Number of even digits:", even_count, "\n")
cat("Number of odd digits:", odd_count, "\n")
cat("Number of zero digits:", zero_count, "\n")
---------------------------------------------------------------------------------------------




